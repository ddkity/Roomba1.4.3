function banner(a){document.writeln("<title>"+a+"</title></head><body><center><div id=status></div></center>")}function elem_set(b,a){document.getElementById(b).innerHTML=a}function escapeHtml(a){var b=document.createElement("div");b.appendChild(document.createTextNode(a));return b.innerHTML}function unescapeHtml(a){var c=document.createElement("div");c.innerHTML=a;var b=c.childNodes[0];return b?b.nodeValue:""}function status_msg(c,b){var a="Cancel";if(b){a="Dismiss"}elem_set("status","<div id=flash_alert>"+c+'<p><button onclick="conn_cancel()">'+a+"</button></div>");document.getElementById("status").scrollIntoView(true)}function scan_td(a){return"<td>"+a+"</td>"}function ssid_or_bssid(a){if(a.bssid){return"bssid="+encodeURIComponent(a.bssid)}return"ssid="+encodeURIComponent(a.ssid)}function connecting(){var j=window.scan_cur;var h=new XMLHttpRequest();var a;var g;var b;var f;var i;var c=0;if(!j){return}h.open("GET","wifi_status.json?"+ssid_or_bssid(j),false);h.send(null);a=JSON.parse(h.responseText).wifi_status;b="Status unknown, please wait.";try{g=a.connect_history[0];if(g.last==1&&g.error==0){b="Connection complete.";c=1}else{if(g.last==1){b="Connection failed: "+g.msg+" (error "+g.error+")";c=1}else{b="In progress";if(g.msg!=null){b+=": "+g.msg}}}}catch(d){}status_msg("Connection to "+escapeHtml(j.ssid)+"<br>"+b,c);if(c==0){setTimeout(connecting,1000)}elem_set("div1","");elem_set("div2","")}function conn_start(b,a){var d=new XMLHttpRequest();var c="wifi_connect.json?"+ssid_or_bssid(a);if(b!=""){c+="&key="+encodeURIComponent(b)}try{d.open("POST",c,false);d.send(null)}catch(f){}if(d.status>=200&&d.status<300){connecting()}else{var g=JSON.parse(d.responseText);if(g!=null){status_msg("Error: "+g.msg,0)}}}function conn_ok(){var a=window.scan_cur;try{var d=document.getElementById("ssid");if(d){a.ssid=d.value}var b=document.getElementById("key");if(b){conn_start(b.value,a)}}catch(c){console.error("caught "+c.message)}return false}function conn_cancel(){window.scan_cur=null;elem_set("status","");redraw()}function conn_prompt(){var a=window.scan_cur;var b="<caption>Connect to network</caption><tr><td>Network<td>";if(a.ssid=="Join Other Network..."){b+="<input id=ssid size=15 autocomplete=offautofocus autocapitalize=off autocorrect=offrequired>"}else{b+=escapeHtml(a.ssid)+"<tr><td>Security<td>"+a.security}b+='<tr><td>Password<td><input type=password id=key size=15 required autocapitalize=off autocorrect=off><tr><td><td><button type=button onclick="conn_cancel()">Cancel</button>&nbsp;&nbsp;&nbsp;<button>Connect</button>';elem_set("div1",'<form onSubmit="return conn_ok();"><table class=networks>'+b+"</table></form>");elem_set("div2","")}function connect(b){var a=window.scan_results[b];window.scan_cur=a;if(a.security!="None"){conn_prompt()}else{conn_start("",a)}}function scan_connect(a){return scan_td('<button onclick="connect('+a+')">Connect</button>')}function scan_line(b,a){var d="<tr>";d+=scan_td(escapeHtml(a.ssid));d+="<td><table id=wifi_bars><tbody><tr>";for(var c=0;c<a.bars;c++){d+="<td width=20px>&nbsp;"}d+="</tbody></table></td>";if(a.type=="Ad hoc"){d+=scan_td("ad-hoc")}else{if(a.type!="AP"){d+=scan_td("-")}else{if(a.ssid==window.wifi_status.connected_ssid){d+=scan_td("Connected")}else{d+=scan_connect(b)}if(a.security!="None"&&a.security!="Unknown"){d+=scan_td('<img alt=Secure src="lock.gif" style="height:0.92em;">')}}}d+="</tr>";return d}function scan_tab(){var c=window.scan_results;var b='<caption><h4>Select Wi-Fi Network<span id=refresh><image src=refresh.gif alt=Refresh style="height:0.92em;"onclick="rescan()"></span></h4></caption><thead><tr><th>Network</th><th>Strength</th><th class=conn_action></th></tr></thead><tbody>';for(var a=0;a<c.length;a++){b+=scan_line(a,c[a])}elem_set("div1","<table class=networks>"+b+"</table>")}function scan(){var a=new XMLHttpRequest();a.open("GET","wifi_scan_results.json",false);a.send(null);var c;try{c=JSON.parse(a.responseText).wifi_scan.results;c.sort(function(e,d){if(d.type!="AP"){return e.signal}if(e.type!="AP"){return -d.signal}if(e.signal==d.signal&&e.ssid!=d.ssid){return d.ssid<e.ssid?1:-1}return d.signal-e.signal})}catch(b){c=new Array()}c.push({ssid:"Join Other Network...",bars:0,security:"Unknown",type:"AP"});window.scan_results=c;scan_tab()}function rescan(){var a=new XMLHttpRequest();a.open("POST","wifi_scan.json",false);a.send(null);scan()}function del_ok(c){var a=new XMLHttpRequest();var b=unescapeHtml(c);a.open("DELETE","wifi_profile.json?ssid="+encodeURIComponent(b),false);a.send(null);if(a.status<299){status_msg("Delete successful",1)}else{status_msg("Delete failed",1)}update()}function prof_delete(c){var a="<table><caption>Confirm ";var b=unescapeHtml(c);if(b==window.wifi_status.connected_ssid){a+="disconnect and "}a+="delete of network "+c+'</caption><tr><td><button type=button onclick="redraw()">Cancel</button><td><button type=button onclick="del_ok(&quot;'+c+'&quot;)">OK</button></table>';elem_set("div1",a);elem_set("div2","")}function prof_line(b){var a;html="<tr><td>"+escapeHtml(b.ssid)+"<td>";if(b.ssid==window.wifi_status.connected_ssid){html+="Connected";a="Disconnect"}else{a="Delete"}return html+'<td><button onclick="prof_delete(&quot;'+escapeHtml(b.ssid)+'&quot;)">'+a+"</button>"}function prof_tab(a){var d=window.proftab;var c;c="<table class=networks><caption><h4>Wi-Fi Profiles</h4></caption><thead><tr><th>Network<th>Status<th><th><tbody>";if(d!=null){d.sort(function(f,e){if(e.ssid==f.ssid){return 0}return e.ssid<f.ssid?1:-1});for(var b=0;b<d.length;b++){c+=prof_line(d[b])}}c+="</table>";elem_set("div2",c)}function profiles(){var a=new XMLHttpRequest();a.open("GET","wifi_profiles.json",false);a.send(null);window.proftab=JSON.parse(a.responseText).wifi_profiles;prof_tab()}function status(){var a=new XMLHttpRequest();a.open("GET","wifi_status.json",false);a.send(null);window.wifi_status=JSON.parse(a.responseText).wifi_status}function redraw(){scan_tab();prof_tab()}function update(){profiles();scan()}status();banner(window.wifi_status.host_symname+" Wifi Status");document.writeln("<section><div class=centered><br><div id=div1></div><br><br><div id=div2></div>");update();